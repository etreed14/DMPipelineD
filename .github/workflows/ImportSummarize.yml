name: Import-and-Summarize

on:
  push:
    paths:
      - 'importTranscript/**/*.txt'
  workflow_dispatch:

permissions:
  contents: write            # we push the moved/summary files back

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      # 1 ‚ñ∏ checkout (depth 2 so git diff works)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # 2 ‚ñ∏ Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3 ‚ñ∏ install deps
      - run: pip install -r requirements.txt

      # 4 ‚ñ∏ MOVE transcripts ‚Üí Calls/YYYY/Month/DD/
      - name: Move transcript(s) into archive
        id: move
        shell: bash
        run: |
          set -e
          TODAY=$(date +'%Y %B %d'); read YEAR MONTH DAY <<< "$TODAY"
          DEST_DIR="Calls/${YEAR}/${MONTH}/${DAY}"; mkdir -p "$DEST_DIR"

          > moved.txt
          git diff --name-only ${{ github.sha }}~1 ${{ github.sha }} \
            | grep '^importTranscript/.*\.txt$' | while IFS= read -r SRC; do
              [ -z "$SRC" ] && continue
              NEW="Din$(date +'%#m')-$(date +'%#d')Transcript.txt"
              git mv "$SRC" "${DEST_DIR}/${NEW}"
              printf '%s\n' "${DEST_DIR}/${NEW}" >> moved.txt
            done

          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          cat moved.txt >> "$GITHUB_OUTPUT"
          echo "EOF"       >> "$GITHUB_OUTPUT"

      # 5 ‚ñ∏ commit the move
      - run: |
          git config user.name  "Summary Bot"
          git config user.email "actions@github.com"
          git commit -am "üöö Archive new transcript(s)" || echo "Nothing to commit"
          git push

      # 6 ‚ñ∏ RUN pipeline on each moved file
      - name: Run pipeline
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        shell: bash
        run: |
          set -e
          IFS=$'\n'
          for f in ${{ steps.move.outputs.files }}; do
            [ -z "$f" ] && continue
            TITLE=$(basename "$f" | sed 's/Transcript\.txt$/Summary/')
            echo "‚ñ∂Ô∏è  $f  ‚Üí  $TITLE"
            python -m pipeline.run_pipeline --file "$f" --title "$TITLE"
          done

      # 7 ‚ñ∏ commit HTML summary
      - run: |
          git add Calls/**/*.html || exit 0
          git commit -m "üìù Auto-generated summary" || echo "Nothing to commit"
          git push

      # 8 ‚ñ∏ upload artifact
      - uses: actions/upload-artifact@v4
        with:
          name: MeetingSummary
          path: Calls/**/*.html
